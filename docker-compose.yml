version: "3.8"

services:
    nodejs:
        build:
            context: .
            dockerfile: Dockerfile
        image: nodejs
        container_name: nodejs
        restart: unless-stopped
        networks:
            - app-network

    webserver:
        image: nginx:mainline-alpine
        container_name: webserver
        restart: unless-stopped
        #build:
        #    context: ./
        #    dockerfile: ./Dockerfile
        #privileged: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - web-root:/var/www/html
            - ./nginx-conf:/etc/nginx/conf.d
            # - ./nginx-conf:/etc/nginx/sites-available
            #- data-certs:/etc/nginx/certs
            #- certbot-etc:/etc/letsencrypt
            #- certbot-var:/var/lib/letsencrypt
            #- dhparam:/etc/ssl/certs
        depends_on:
            - nodejs
        networks:
            - app-network

    #certbot:
        #image: certbot/certbot
        #image: certbot/dns-cloudflare
        #container_name: certbot
        #volumes:
            #- certbot-etc:/etc/letsencrypt
            #- certbot-var:/var/lib/letsencrypt
            #- web-root:/var/www/html
        #depends_on:
            #- webserver
        #command: certonly --webroot --webroot-path=/var/www/html --email xeroxstrong@gmail.com --agree-tos --no-eff-email --staging -d api.laruno.id

volumes:
    certbot-etc:
    certbot-var:
    web-root:
        driver: local
        driver_opts:
            type: none
            device: /home/dev-apis/app/laruno-api/dist/
            o: bind

    #dhparam:
        #driver: local
        #driver_opts:
            #type: none
            #device: /home/dev-apis/app/laruno-api/dhparam/
            #o: bind

    #data-certs:
        #driver: local
        #driver_opts:
            #type: none
            #device: /etc/nginx/certs/
            #o: bind

networks:
    app-network:
        driver: bridge
